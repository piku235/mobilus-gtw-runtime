name: Release Build

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-24.04
    env:
      OPENWRT_VERSION: "24.10.3"
      GCC_VERSION: "13.3.0"
      MAIN_TARGET: "ramips"
      SUB_TARGET: "mt76x8"
      ARCH: "mipsel_24kc"

    steps:
    - uses: actions/checkout@v5

    - name: Common strings
      id: strings
      shell: bash
      run: |
        RUNTIME_VERSION="${{ github.event.release.tag_name }}"
        echo "build-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
        echo "runtime-version=${RUNTIME_VERSION#v}" >> "$GITHUB_OUTPUT"
        echo "openwrt-target-dir=openwrt-sdk/staging_dir/target-${ARCH}_musl" >> "$GITHUB_OUTPUT"
        echo "openwrt-toolchain-dir=openwrt-sdk/staging_dir/toolchain-${ARCH}_gcc-${GCC_VERSION}_musl" >> "$GITHUB_OUTPUT"

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y patchelf build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3-setuptools rsync swig unzip zlib1g-dev file wget

    - name: Download OpenWRT SDK
      run: |
        wget -q https://downloads.openwrt.org/releases/${OPENWRT_VERSION}/targets/${MAIN_TARGET}/${SUB_TARGET}/openwrt-sdk-${OPENWRT_VERSION}-${MAIN_TARGET}-${SUB_TARGET}_gcc-${GCC_VERSION}_musl.Linux-x86_64.tar.zst
        tar -xf openwrt-sdk-${OPENWRT_VERSION}-${MAIN_TARGET}-${SUB_TARGET}_gcc-${GCC_VERSION}_musl.Linux-x86_64.tar.zst
        mv openwrt-sdk-${OPENWRT_VERSION}-${MAIN_TARGET}-${SUB_TARGET}_gcc-${GCC_VERSION}_musl.Linux-x86_64 openwrt-sdk

    - name: Export OpenWRT SDK
      run: |
        echo "PATH=${PWD}/openwrt-sdk/staging_dir/toolchain-${ARCH}_gcc-${GCC_VERSION}_musl/bin:$PATH" >> $GITHUB_ENV
        echo "STAGING_DIR=${PWD}/openwrt-sdk/staging_dir/toolchain-${ARCH}_gcc-${GCC_VERSION}_musl" >> $GITHUB_ENV

    - name: Install SDK feeds
      working-directory: openwrt-sdk
      run: |
        scripts/feeds update -a
        scripts/feeds install -a
        cp ${{ github.workspace }}/openwrt/.config .
        make defconfig

    - name: Compile OpenWRT libraries
      working-directory: openwrt-sdk
      run: |
        make -j$(nproc) package/openssl/compile
        make -j$(nproc) package/mosquitto/compile
        make -j$(nproc) package/sqlite3/compile

    - name: Strip libraries
      run: find ${{ steps.strings.outputs.openwrt-target-dir }}/usr/lib ${{ steps.strings.outputs.openwrt-toolchain-dir }}/lib -type f -regex '.*/lib.*\.so\(\.[0-9]+\)*' -exec mipsel-openwrt-linux-strip --strip-unneeded {} \; 2>/dev/null

    - name: Make target package
      run: |
        mkdir -p target/.runtime
        mkdir -p target/bin
        mkdir -p target/etc
        mkdir -p target/lib
        mkdir -p target/var
        cp -ar packaging/pkg target/bin
        cp -ar packaging/runtime target/bin
        [ -x packaging/prerm ] && cp -a packaging/prerm target/.runtime
        [ -x packaging/postrm ] && cp -a packaging/postrm target/.runtime
        [ -x packaging/preinst ] && cp -a packaging/preinst target/.runtime
        [ -x packaging/postinst ] && cp -a packaging/postinst target/.runtime
        echo "${{ steps.strings.outputs.runtime-version }}" > target/.runtime/version

    - name: Copy libraries to target package
      run: |
        cp -a ${{ steps.strings.outputs.openwrt-target-dir }}/usr/lib/libcares.so* target/lib
        cp -a ${{ steps.strings.outputs.openwrt-target-dir }}/usr/lib/libcjson.so* target/lib
        cp -a ${{ steps.strings.outputs.openwrt-target-dir }}/usr/lib/libcrypto.so* target/lib
        cp -a ${{ steps.strings.outputs.openwrt-target-dir }}/usr/lib/libssl.so* target/lib
        cp -a ${{ steps.strings.outputs.openwrt-target-dir }}/usr/lib/libmosquitto.so* target/lib
        cp -a ${{ steps.strings.outputs.openwrt-target-dir }}/usr/lib/libmosquittopp.so* target/lib
        cp -a ${{ steps.strings.outputs.openwrt-target-dir }}/usr/lib/libsqlite3.so* target/lib
        cp -a ${{ steps.strings.outputs.openwrt-target-dir }}/usr/lib/libz.so* target/lib
        cp -a ${{ steps.strings.outputs.openwrt-toolchain-dir }}/lib/ld-musl-mipsel-sf.so.1 target/lib
        cp -a ${{ steps.strings.outputs.openwrt-toolchain-dir }}/lib/libatomic.so* target/lib
        cp -a ${{ steps.strings.outputs.openwrt-toolchain-dir }}/lib/libc.so target/lib
        cp -a ${{ steps.strings.outputs.openwrt-toolchain-dir }}/lib/libgcc_s.so* target/lib
        cp -a ${{ steps.strings.outputs.openwrt-toolchain-dir }}/lib/libstdc++.so* target/lib

    - name: Build target package
      run: tar --owner=0 --group=0 -czf runtime.tar.gz -C target .

    - name: Build target sysroot
      run: |
        mkdir -p target-sysroot/usr
        cp -a ${{ steps.strings.outputs.openwrt-toolchain-dir }}/lib target-sysroot
        cp -a ${{ steps.strings.outputs.openwrt-toolchain-dir }}/include target-sysroot
        cp -a ${{ steps.strings.outputs.openwrt-target-dir }}/usr/lib target-sysroot/usr
        cp -a ${{ steps.strings.outputs.openwrt-target-dir }}/usr/include target-sysroot/usr
        tar -czf target-sysroot.tar.gz target-sysroot

    - name: Upload
      uses: softprops/action-gh-release@v2
      with:
        files: |
          runtime.tar.gz
          target-sysroot.tar.gz
